
# 아무런 설정이 없을 경우 h2 데이터 베이스로 실행이 된다.

# spring boot가 제공하는 JSON 문자열을 Object로 변환하는 것을  deserialization Object를 JSON 문자열로 변환하는 것을 serialization이라고 한다.
# JSON을 가지고 Object로 변환할 때, 없는 값을 입력하면 실패하도록 설정 하는 것
# 일반적으로 bad request에러를 발생 시킨다. 
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.serialization.fail-on-empty-beans=false



# postgresql 설정
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=pass
# spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true


logging.level.org.hibernate.SQL=debug
# 데이터 베이스에 저장될 때, 불러지는 값을 보기 위해서 다음을 설정해줘야한다.
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# encoding add
server.servlet.encoding.charset=UTF-8

# spring securrity logging
logging.level.org.springframework.security=debug

# property setting
my-app.admin-user-name=admin@email.com
my-app.admin-user-password=admin

my-app.user-name=user@eamil.com
my-app.user-password=user

my-app.client-id=myApp
my-app.client-secret=pass
